#!/bin/bash

# Constants
FORMATS=("3gp" "avi" "m4v" "mov" "mp4" "mpg" "mts" "ogm")
NICE_LEVEL="+19"
PATH_TO_FILES="$1"
FILES=()

# Export library path that could be missing
LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64 && export LD_LIBRARY_PATH

# Check ffmpeg binaries
if test -f "/snap/bin/ffmpeg"; then
	FFMPEG="/snap/bin/ffmpeg"
else 
	FFMPEG="ffmpeg"
fi

# Colors
GREEN='\033[0;32m'
NC='\033[0m'

# Check interrupt
trap interrupt INT

function interrupt {
        echo "Interrupted"
        rm -rf "$newfile"
        exit
}

# Check path to files
if [ "$1" == "" ]; then
  echo "No path to files was put as an argument"
  exit
fi

# Get files for specified format
for format in ${FORMATS[@]}; do
  while IFS= read -r -d $'\0'; do
      echo " - $REPLY"
      FILES+=("$REPLY")
  done < <(find "$PATH_TO_FILES" -iname "*.$format" -print0)
done

# Check if there is files
if [ ${#FILES[@]}  == 0 ]; then
  echo "No files found for given formats : ${FORMATS[@]}"
  exit
fi

# display prompt before launching convertion
echo "${#FILES[@]} files will be stabilized."
if [ -z "$NO_INTERACTION_MODE" ]; then
  read -p "Are you sure? [yN] " -n 1 -r
  if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo ""
    echo "Exiting..."
    exit 1
  fi
  echo "" # Skip a line
fi

# Processing files
for file in "${FILES[@]}"; do
  extension="${file##*.}"
  filename="${file%.*}"
  newfile="$filename.stabilized.$extension"

  echo -e "$GREEN[$(date)] Stabilizing '$file' to '$newfile'... $NC"
  nice -n $NICE_LEVEL ffmpeg -i "$file" -vf vidstabdetect -f null - && \
  nice -n $NICE_LEVEL ffmpeg -i "$file" -vf vidstabtransform=input='transforms.trf' "$newfile" &&  \
  rm "$file" transforms.trf
done

echo "All stabilizations are completed."
